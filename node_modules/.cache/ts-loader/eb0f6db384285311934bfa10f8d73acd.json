{"remainingRequest":"E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\node_modules\\babel-loader\\lib\\index.js!E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\node_modules\\ts-loader\\index.js??ref--13-2!E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\src\\helper.ts","dependencies":[{"path":"E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\src\\helper.ts","mtime":1602732239000},{"path":"E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663604122860},{"path":"E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1663604125594},{"path":"E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\node_modules\\ts-loader\\index.js","mtime":1663604130729}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUZpdFVybChkYXRhLCB3aWR0aCwgaGVpZ2h0KSB7CiAgdmFyIGZvcm1hdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogWydtX3BhZCddOwoKICBpZiAoZGF0YSAmJiBkYXRhLnVybCkgewogICAgdmFyIGZvcm1hdFN0ciA9IGZvcm1hdC5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGN1cnJlbnQpIHsKICAgICAgcmV0dXJuIGN1cnJlbnQgKyAnLCcgKyBwcmV2OwogICAgfSwgJycpOwogICAgZGF0YS5maXRVcmwgPSBkYXRhLnVybCArICI/eC1vc3MtcHJvY2Vzcz1pbWFnZS9yZXNpemUsIi5jb25jYXQoZm9ybWF0U3RyLCAiaF8iKS5jb25jYXQoaGVpZ2h0LCAiLHdfIikuY29uY2F0KHdpZHRoKTsKICB9Cn0KZXhwb3J0IGZ1bmN0aW9uIGFkZENvbHVtbkF2YXRhcihkYXRhLCB3aWR0aCwgaGVpZ2h0KSB7CiAgaWYgKGRhdGEuYXZhdGFyKSB7CiAgICBnZW5lcmF0ZUZpdFVybChkYXRhLmF2YXRhciwgd2lkdGgsIGhlaWdodCk7CiAgfSBlbHNlIHsKICAgIHZhciBwYXJzZUNvbCA9IGRhdGE7CiAgICBkYXRhLmF2YXRhciA9IHsKICAgICAgZml0VXJsOiByZXF1aXJlKHBhcnNlQ29sLnRpdGxlID8gJ0AvYXNzZXRzL2NvbHVtbi5qcGcnIDogJ0AvYXNzZXRzL2F2YXRhci5qcGcnKQogICAgfTsKICB9Cn0KZXhwb3J0IGZ1bmN0aW9uIGJlZm9yZVVwbG9hZENoZWNrKGZpbGUsIGNvbmRpdGlvbikgewogIHZhciBmb3JtYXQgPSBjb25kaXRpb24uZm9ybWF0LAogICAgICBzaXplID0gY29uZGl0aW9uLnNpemU7CiAgdmFyIGlzVmFsaWRGb3JtYXQgPSBmb3JtYXQgPyBmb3JtYXQuaW5jbHVkZXMoZmlsZS50eXBlKSA6IHRydWU7CiAgdmFyIGlzVmFsaWRTaXplID0gc2l6ZSA/IGZpbGUuc2l6ZSAvIDEwMjQgLyAxMDI0IDwgc2l6ZSA6IHRydWU7CiAgdmFyIGVycm9yID0gbnVsbDsKCiAgaWYgKCFpc1ZhbGlkRm9ybWF0KSB7CiAgICBlcnJvciA9ICdmb3JtYXQnOwogIH0KCiAgaWYgKCFpc1ZhbGlkU2l6ZSkgewogICAgZXJyb3IgPSAnc2l6ZSc7CiAgfQoKICByZXR1cm4gewogICAgcGFzc2VkOiBpc1ZhbGlkRm9ybWF0ICYmIGlzVmFsaWRTaXplLAogICAgZXJyb3I6IGVycm9yCiAgfTsKfQp2YXIgdGVzdERhdGEgPSBbewogIF9pZDogJzEnLAogIG5hbWU6ICdhJwp9LCB7CiAgX2lkOiAnMicsCiAgbmFtZTogJ2InCn1dOwpleHBvcnQgdmFyIGFyclRvT2JqID0gZnVuY3Rpb24gYXJyVG9PYmooYXJyKSB7CiAgcmV0dXJuIGFyci5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGN1cnJlbnQpIHsKICAgIGlmIChjdXJyZW50Ll9pZCkgewogICAgICBwcmV2W2N1cnJlbnQuX2lkXSA9IGN1cnJlbnQ7CiAgICB9CgogICAgcmV0dXJuIHByZXY7CiAgfSwge30pOwp9Owp2YXIgcmVzdWx0ID0gYXJyVG9PYmoodGVzdERhdGEpOwpjb25zb2xlLmxvZyhyZXN1bHQpOwpleHBvcnQgdmFyIG9ialRvQXJyID0gZnVuY3Rpb24gb2JqVG9BcnIob2JqKSB7CiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrZXkpIHsKICAgIHJldHVybiBvYmpba2V5XTsKICB9KTsKfTsKdmFyIHRlc3REYXRhMiA9IHsKICAxOiB7CiAgICBfaWQ6ICcxJywKICAgIG5hbWU6ICdhJwogIH0sCiAgMjogewogICAgX2lkOiAnMicsCiAgICBuYW1lOiAnYicKICB9Cn07CnZhciByZXN1bHQyID0gb2JqVG9BcnIodGVzdERhdGEyKTsKY29uc29sZS5sb2cocmVzdWx0Mik7"},{"version":3,"sources":["E:\\BaiduNetdiskDownload\\02.AI algorithm engineer\\02.python基础及技术\\04.Python web\\05.项目---最好是企业级完整项目\\Vue\\vue3.0+ts仿知乎专栏企业级项目\\仿知乎专栏企业级项目\\资料\\zheye-master\\src\\helper.ts"],"names":[],"mappings":"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","sourcesContent":["import { ColumnProps, ImageProps, UserProps } from './store'\n\nexport function generateFitUrl(data: ImageProps, width: number, height: number, format = ['m_pad']) {\n  if (data && data.url) {\n    const formatStr = format.reduce((prev, current) => {\n      return current + ',' + prev\n    }, '')\n    data.fitUrl = data.url + `?x-oss-process=image/resize,${formatStr}h_${height},w_${width}`\n  }\n}\n\nexport function addColumnAvatar(data: ColumnProps | UserProps, width: number, height: number) {\n  if (data.avatar) {\n    generateFitUrl(data.avatar, width, height)\n  } else {\n    const parseCol = data as ColumnProps\n    data.avatar = {\n      fitUrl: require(parseCol.title ? '@/assets/column.jpg' : '@/assets/avatar.jpg')\n    }\n  }\n}\n\ninterface CheckCondition {\n  format?: string[];\n  size?: number;\n}\ntype ErrorType = 'size' | 'format' | null\nexport function beforeUploadCheck(file: File, condition: CheckCondition) {\n  const { format, size } = condition\n  const isValidFormat = format ? format.includes(file.type) : true\n  const isValidSize = size ? (file.size / 1024 / 1024 < size) : true\n  let error: ErrorType = null\n  if (!isValidFormat) {\n    error = 'format'\n  }\n  if (!isValidSize) {\n    error = 'size'\n  }\n  return {\n    passed: isValidFormat && isValidSize,\n    error\n  }\n}\ninterface TestProps {\n  _id: string;\n  name: string;\n}\nconst testData: TestProps[] = [{ _id: '1', name: 'a' }, { _id: '2', name: 'b' }]\n\nexport const arrToObj = <T extends { _id?: string }>(arr: Array<T>) => {\n  return arr.reduce((prev, current) => {\n    if (current._id) {\n      prev[current._id] = current\n    }\n    return prev\n  }, {} as { [key: string]: T })\n}\nconst result = arrToObj(testData)\nconsole.log(result)\nexport const objToArr = <T>(obj: {[key: string]: T}) => {\n  return Object.keys(obj).map(key => obj[key])\n}\nconst testData2: {[key: string]: TestProps} = {\n  1: { _id: '1', name: 'a' },\n  2: { _id: '2', name: 'b' }\n}\n\nconst result2 = objToArr(testData2)\nconsole.log(result2)\n"],"sourceRoot":""}]}